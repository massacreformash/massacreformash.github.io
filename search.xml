<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[模拟SDWebImage异步下载图片操作]]></title>
      <url>http://yoursite.com/2016/07/30/%E6%A8%A1%E6%8B%9FSDWebImage%E5%BC%82%E6%AD%A5%E4%B8%8B%E8%BD%BD%E5%9B%BE%E7%89%87%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p><img src="http://ww4.sinaimg.cn/large/6b1763dbjw1f6c5lbhtm5j21kw2aytxa.jpg" alt="思维导图"></p>
<h2 id="异步图像-搭建界面"><a href="#异步图像-搭建界面" class="headerlink" title="异步图像-搭建界面"></a>异步图像-搭建界面</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><ul>
<li>搭建界面</li>
<li>复习loadView</li>
<li>体会<code>AFNetWoring</code>的使用</li>
<li>复习tableView的简单实用</li>
</ul>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul>
<li>新建项目</li>
<li>定义属性</li>
</ul>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">@interface</span> ViewController ()</div><div class="line"><span class="variable">@property</span> (nonatomic, strong) UITableView *tableView;</div><div class="line"><span class="variable">@end</span></div></pre></td></tr></table></figure>
<ul>
<li>重写<code>loadView</code>  </li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)loadView &#123;</div><div class="line">    _tableView = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="built_in">CGRectZero</span> style:<span class="built_in">UITableViewStylePlain</span>];</div><div class="line">    <span class="keyword">self</span>.view = _tableView;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>运行测试</p>
</blockquote>
<h4 id="加载网络数据"><a href="#加载网络数据" class="headerlink" title="加载网络数据"></a>加载网络数据</h4><ul>
<li>添加<code>AFNetWorking</code>网络框架</li>
<li>导入头文件</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#import</span> <span class="string">"AFNetworking.h"</span></div></pre></td></tr></table></figure>
<ul>
<li>实现loadData方法</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)loadData &#123;</div><div class="line">    <span class="built_in">NSString</span> *urlString = <span class="string">@"https://raw.githubusercontent.com/massacreformash/DemoRepository/master/apps.json"</span>;</div><div class="line">    </div><div class="line">    <span class="comment">//初始化一个网络请求的管理器</span></div><div class="line">    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];</div><div class="line">    </div><div class="line">    [manager GET:urlString parameters:<span class="literal">nil</span> progress:<span class="literal">nil</span> success:^(<span class="built_in">NSURLSessionDataTask</span> * _Nonnull task, <span class="keyword">id</span>  _Nullable responseObject) &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"success: %@"</span>, responseObject);</div><div class="line">    &#125; failure:^(<span class="built_in">NSURLSessionDataTask</span> * _Nullable task, <span class="built_in">NSError</span> * _Nonnull error) &#123;</div><div class="line">        <span class="comment">//在公司开发的话 错误请求一定要处理</span></div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"fail: %@"</span>, error);</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, [<span class="built_in">NSThread</span> currentThread]);</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="绑定表格数据"><a href="#绑定表格数据" class="headerlink" title="绑定表格数据"></a>绑定表格数据</h4><ul>
<li>定义tableView可重用标识符</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *cellId = <span class="string">@"cell"</span>;</div></pre></td></tr></table></figure>
<ul>
<li>设置数据源并注册原型cell</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)loadView &#123;</div><div class="line">    _tableView = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="built_in">CGRectZero</span> style:<span class="built_in">UITableViewStylePlain</span>];</div><div class="line"></div><div class="line">    _tableView.dataSource = <span class="keyword">self</span>;</div><div class="line">    [_tableView registerClass:[<span class="built_in">UITableViewCell</span> <span class="keyword">class</span>] forCellReuseIdentifier:cellId];</div><div class="line"></div><div class="line">    <span class="keyword">self</span>.view = _tableView;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>遵守协议</li>
</ul>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@interface</span> ViewController () <span class="variable">&lt;UITableViewDataSource&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>实现协议方法</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark - 数据源方法</span></div><div class="line"></div><div class="line">-(<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section&#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">10</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath&#123;</div><div class="line">    <span class="built_in">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:cellId forIndexPath:indexPath];</div><div class="line">    cell.textLabel.text = @(indexPath.row).description;</div><div class="line">    <span class="keyword">return</span> cell;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="定义模型"><a href="#定义模型" class="headerlink" title="定义模型"></a>定义模型</h4><ul>
<li>新建<code>HMAppInfo</code>模型 继承自<code>NSObject</code> 并声明好相关属性</li>
</ul>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="variable">@interface</span> <span class="attribute">HMAppInfo </span>: NSObject</div><div class="line"></div><div class="line"><span class="variable">@property</span> (nonatomic, copy) NSString *name;</div><div class="line"><span class="variable">@property</span> (nonatomic, copy) NSString *download;</div><div class="line"><span class="variable">@property</span> (nonatomic, copy) NSString *icon;</div><div class="line"></div><div class="line"><span class="variable">@end</span></div></pre></td></tr></table></figure>
<ul>
<li>在viewController中导入模型 并设置模型数组</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"HMAppInfo.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSMutableArray</span> &lt;HMAppInfo *&gt; *app_infos;</div></pre></td></tr></table></figure>
<ul>
<li>修改<code>loadData</code>方法 在其中将下载好的字典转为模型</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)loadData &#123;</div><div class="line">    </div><div class="line">    <span class="built_in">NSString</span> *urlString = <span class="string">@"https://raw.githubusercontent.com/massacreformash/DemoRepository/master/apps.json"</span>;</div><div class="line">    </div><div class="line">    <span class="comment">//初始化一个网络请求的管理器</span></div><div class="line">    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];</div><div class="line">    </div><div class="line">    [manager GET:urlString parameters:<span class="literal">nil</span> progress:<span class="literal">nil</span> success:^(<span class="built_in">NSURLSessionDataTask</span> * _Nonnull task, <span class="keyword">id</span>  _Nullable responseObject) &#123;</div><div class="line">        <span class="comment">//字典转模型</span></div><div class="line">        <span class="built_in">NSArray</span> *array = responseObject;</div><div class="line">        <span class="keyword">for</span> (<span class="built_in">NSDictionary</span> *dict <span class="keyword">in</span> array) &#123;</div><div class="line">            HMAppInfo *info = [[HMAppInfo alloc] init];</div><div class="line">            [info setValuesForKeysWithDictionary:dict];</div><div class="line">            [<span class="keyword">self</span>.app_infos addObject:info];</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="comment">//刷新tableView</span></div><div class="line">        [<span class="keyword">self</span>.tableView reloadData];</div><div class="line">    &#125; failure:^(<span class="built_in">NSURLSessionDataTask</span> * _Nullable task, <span class="built_in">NSError</span> * _Nonnull error) &#123;</div><div class="line">        <span class="comment">//在公司开发的话 错误请求一定要处理</span></div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"fail: %@"</span>, error);</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, [<span class="built_in">NSThread</span> currentThread]);</div><div class="line">    &#125;];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>修改数据源方法, 绑定cell数据</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark - 数据源方法</span></div><div class="line"></div><div class="line">-(<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.app_infos.count;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath&#123;</div><div class="line">    <span class="built_in">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:<span class="string">@"cell"</span> forIndexPath:indexPath];</div><div class="line">    </div><div class="line">    HMAppInfo *info = <span class="keyword">self</span>.app_infos[indexPath.row];</div><div class="line">    cell.textLabel.text = info.name;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/07/29/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[进阶第12天]]></title>
      <url>http://yoursite.com/2016/07/08/%E8%BF%9B%E9%98%B612/</url>
      <content type="html"><![CDATA[<h3 id="01-复习预习"><a href="#01-复习预习" class="headerlink" title="01-复习预习"></a>01-复习预习</h3><h3 id="02-左侧点击两次的bug"><a href="#02-左侧点击两次的bug" class="headerlink" title="02-左侧点击两次的bug"></a>02-左侧点击两次的bug</h3><ul>
<li>步骤:<ul>
<li>点击的时候记录左侧位置</li>
<li>滑动的时候也记录左侧的位置</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h3 id="03-控制器获取点击加号的事件"><a href="#03-控制器获取点击加号的事件" class="headerlink" title="03-控制器获取点击加号的事件"></a>03-控制器获取点击加号的事件</h3><ul>
<li>步骤:<ul>
<li>在cell的xib中添加一个加号按钮,</li>
<li>监听加号按钮的点击事件.(这个事件在cell中)</li>
<li>希望动画是由控制器来做,所以,希望点击cell的时候通知到控制器.</li>
<li>这时,使用代理</li>
<li>代理写法:<ul>
<li>在cell的.h中 写协议</li>
<li>在cell的.h中 写协议 的 代理方法</li>
<li>在cell的.h中 写代理属性</li>
<li>在cell的.m中 判断代理方式是否响应,如果响应,执行.</li>
<li>在控制器的.m中 使用这个代理方法(1.遵守协议,2.找到cell,cell.delegate = self,3.实现代理方法)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="04-坐标系转换"><a href="#04-坐标系转换" class="headerlink" title="04-坐标系转换"></a>04-坐标系转换</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[shopDetailOrderFoodCell convertPoint:addButton.center toView:<span class="keyword">self</span>.view];</div></pre></td></tr></table></figure>
<ul>
<li>相对于self.view的位置 = cell的addButton.center的位置 转化到 self.view的坐标系</li>
</ul>
<h3 id="05-简单实现直线动画效果"><a href="#05-简单实现直线动画效果" class="headerlink" title="05-简单实现直线动画效果"></a>05-简单实现直线动画效果</h3><ul>
<li>步骤:<ul>
<li>在代理方法中,创建了一个关键帧动画.</li>
<li>修改红点儿的’position’ </li>
<li>创建imageView,设置红点图片和center为start</li>
<li>把动画添加到红点儿的imageView的layer上</li>
</ul>
</li>
</ul>
<h3 id="06-移除红点儿的imageView"><a href="#06-移除红点儿的imageView" class="headerlink" title="06-移除红点儿的imageView"></a>06-移除红点儿的imageView</h3><ul>
<li>方法1:<ul>
<li>延时(动画的时间)直接remove即可</li>
</ul>
</li>
<li>方法2:<ul>
<li>利用KVC</li>
<li>因为,动画结束的时候,可以获取到不同的动画,</li>
<li>在添加动画之前,相当于多给anim设置一个键值对</li>
<li>key随便写 value就是这个红色的iamgeView</li>
<li>在动画结束的时候,通过不同的anim对象,取同样的key.就可以获取到每次做动画的iamgeView</li>
<li>移除</li>
</ul>
</li>
</ul>
<h3 id="07-曲线动画"><a href="#07-曲线动画" class="headerlink" title="07-曲线动画"></a>07-曲线动画</h3><figure class="highlight mm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[path moveToPoint:start];</div><div class="line">[path addQuadCurveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">50</span>, <span class="keyword">self</span>.view.bounds.size.height - <span class="number">50</span>) controlPoint:<span class="built_in">CGPointMake</span>(start.x - <span class="number">150</span>, start.y - <span class="number">150</span>)];</div></pre></td></tr></table></figure>
<ul>
<li>控制点的含义 请参考素材中的图</li>
</ul>
<h3 id="08-购物车界面"><a href="#08-购物车界面" class="headerlink" title="08-购物车界面"></a>08-购物车界面</h3><ul>
<li>步骤:<ul>
<li>创建xib视图.</li>
<li>托控件(注意;背景是透明的,再拖一个黄色view) </li>
<li>在代码中写一个快速获取视图的方法,</li>
<li>在控制器的view添加购物的view,同时设置自动布局<ul>
<li>下左右 0  宽60</li>
</ul>
</li>
<li>修改tableView布局(不让购物车遮挡tableView)    </li>
<li>修改两个tableView的bottom为购物车的top</li>
<li>记得设置offset为正数(10)    </li>
</ul>
</li>
</ul>
<h3 id="09-曲线动画停到购物车图标的中心点"><a href="#09-曲线动画停到购物车图标的中心点" class="headerlink" title="09-曲线动画停到购物车图标的中心点"></a>09-曲线动画停到购物车图标的中心点</h3><ul>
<li>想在控制器中获取’购物车视图’中的’购物车图标’的’中心’</li>
<li>控制器里面创建了购物车视图,获取视图,理论上就可以获取到里面的所有内容.</li>
<li>把’购物的图标’写到.m中,.h提供一个获取这个’购物车图标’的’中心’的方法.</li>
<li>在控制器中直接调用即可(在写核心动画的代码的方法中,直接获取不到购物车视图,需要全局属性)</li>
</ul>
<h3 id="10-右侧cell跳转到详情页面"><a href="#10-右侧cell跳转到详情页面" class="headerlink" title="10-右侧cell跳转到详情页面"></a>10-右侧cell跳转到详情页面</h3><ul>
<li>找到右边的点击事件</li>
<li>创建详情控制器</li>
<li>push</li>
</ul>
<h3 id="11-移动控制器view动画有问题的解决办法"><a href="#11-移动控制器view动画有问题的解决办法" class="headerlink" title="11-移动控制器view动画有问题的解决办法"></a>11-移动控制器view动画有问题的解决办法</h3><ul>
<li>原因:<ul>
<li>因为计算的点都是根据控制器的view计算的.</li>
<li>在动控制器的view的时候,就会出现问题</li>
<li>解决的思路,就是找一个不动的坐标系进行计算</li>
<li>把开始和结束的点,都转化成window</li>
<li>同时记得把添加红色imageView的那句话,同时改成添加到window就解决了.</li>
</ul>
</li>
</ul>
<h3 id="12-添加详情页面的collectionView"><a href="#12-添加详情页面的collectionView" class="headerlink" title="12-添加详情页面的collectionView"></a>12-添加详情页面的collectionView</h3><ul>
<li>创建collectionView</li>
<li>添加到控制器的视图</li>
<li>使用自动布局</li>
<li>创建自定义layout</li>
<li>layout中设置,item大小/最小行间距/最小cell间距/滚动方向</li>
<li>设置collectionView的分页</li>
<li>数据源和代理</li>
<li>注册单元格    </li>
</ul>
<h3 id="13-分析数据源的写法"><a href="#13-分析数据源的写法" class="headerlink" title="13-分析数据源的写法"></a>13-分析数据源的写法</h3><ul>
<li>实际上,这个页面并不是只有一组,和之前的tableView一样,只不过是让组之间的间距都为0</li>
<li>所以,我们的两个数据源方法(有多少组,有多少行),和之前tableView一样</li>
</ul>
<h3 id="14-自定义cell显示数据"><a href="#14-自定义cell显示数据" class="headerlink" title="14-自定义cell显示数据"></a>14-自定义cell显示数据</h3><ul>
<li>步骤<ul>
<li>自己创建一个cell</li>
<li>重新cell的initWithFrame方法</li>
<li>在里面创建子控件,并使用自动布局</li>
<li>在.h中声明一个 ‘food’ 的模型</li>
<li>在vc中(cellForItem)中,传入数据(数据和前一个tableView一样)</li>
<li>在.m中,set数据的方法,把数据放在控件上</li>
</ul>
</li>
</ul>
<h3 id="15-进入页面的偏移量"><a href="#15-进入页面的偏移量" class="headerlink" title="15-进入页面的偏移量"></a>15-进入页面的偏移量</h3><ul>
<li>步骤:<ul>
<li>传入点的位置,因为之前的设计,就是让collectionView和tableView的组和cell的个数都一样,所以,直接传入点击的tableView的索引.</li>
<li>在viewDidLoad(setupUI)中,使用scrollTo的方法,进行滑动.动画为no</li>
<li>此时,collectionView如果使用自动布局,collectionView并没有大小,需要告诉系统,赶快计算一下.</li>
<li>layoutIfNeeded.</li>
</ul>
</li>
</ul>
<h3 id="16-提示框"><a href="#16-提示框" class="headerlink" title="16-提示框"></a>16-提示框</h3><ul>
<li>使用svprogressHUD</li>
<li>show status 显示文字</li>
<li>setMinimumDismissTimeInterval 时间</li>
<li>setDefaultMaskType 遮罩层</li>
</ul>
<h3 id="17-自定义控件-集成UIControl"><a href="#17-自定义控件-集成UIControl" class="headerlink" title="17-自定义控件(集成UIControl)"></a>17-自定义控件(集成UIControl)</h3><ul>
<li>如果之前是某一个继承view的视图,如果想要监听,可以直接把这个view改成Control</li>
<li>通过addtarget的方法 进行监听.</li>
<li>在需要使用的时候,发送一个事件(sendActionsForControlEvents)</li>
</ul>
<h3 id="18-美团往右再往上的bug"><a href="#18-美团往右再往上的bug" class="headerlink" title="18-美团往右再往上的bug"></a>18-美团往右再往上的bug</h3><ul>
<li>在手势的松手/失败/取消的时候直接return</li>
</ul>
<h3 id="xx-完善"><a href="#xx-完善" class="headerlink" title="xx-完善"></a>xx-完善</h3><ul>
<li><a href="https://www.cocoacontrols.com/" target="_blank" rel="external">https://www.cocoacontrols.com/</a></li>
<li><a href="http://code4app.com/" target="_blank" rel="external">http://code4app.com/</a></li>
<li>动画框架 pop</li>
<li>pop 案例 popping</li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
